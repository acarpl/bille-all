CREATE TABLE users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    phone VARCHAR(20),
    student_id VARCHAR(50) NULL, -- untuk student promo
    role ENUM('customer', 'admin', 'staff') DEFAULT 'customer',
    loyalty_points INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE floors (
    id INT PRIMARY KEY AUTO_INCREMENT,
    floor_number INT NOT NULL,
    name VARCHAR(50) NOT NULL, -- "Lantai 1", "VIP Floor", dll
    base_hourly_rate DECIMAL(10,2) NOT NULL,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE tables (
    id INT PRIMARY KEY AUTO_INCREMENT,
    table_number VARCHAR(10) NOT NULL,
    name VARCHAR(50) NOT NULL,
    floor_id INT NOT NULL,
    table_type ENUM('regular', 'vip', 'competition') DEFAULT 'regular',
    status ENUM('available', 'occupied', 'reserved', 'maintenance') DEFAULT 'available',
    capacity INT DEFAULT 4,
    hourly_rate DECIMAL(10,2) NOT NULL, -- bisa override floor rate
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (floor_id) REFERENCES floors(id),
    UNIQUE KEY unique_table_floor (table_number, floor_id)
);

    CREATE TABLE packages (
        id INT PRIMARY KEY AUTO_INCREMENT,
        name VARCHAR(100) NOT NULL,
        package_type ENUM('hourly', 'flat_rate', 'unlimited') NOT NULL,
        price DECIMAL(10,2) NOT NULL,
        duration_hours INT NULL,
        start_time TIME NULL,
        end_time TIME NULL,
        valid_days VARCHAR(50) NULL,
        min_duration INT DEFAULT 1,
        max_duration INT NULL,
        apply_to ENUM('all_floors', 'specific_floors', 'specific_tables') DEFAULT 'all_floors',
        floor_ids JSON NULL, -- [1, 2] untuk specific floors
        table_ids JSON NULL, -- [1, 3, 5] untuk specific tables
        is_active BOOLEAN DEFAULT TRUE,
        conditions TEXT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

CREATE TABLE bookings (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    table_id INT NOT NULL,
    package_id INT NOT NULL,
    customer_name VARCHAR(100) NOT NULL,
    start_time DATETIME NOT NULL,
    end_time DATETIME NULL, -- NULL untuk open bill
    actual_end_time DATETIME NULL,
    duration_hours INT NOT NULL,
    total_amount DECIMAL(10,2) NOT NULL,
    status ENUM('pending', 'confirmed', 'active', 'completed', 'cancelled') DEFAULT 'pending',
    booking_type ENUM('per_jam', 'open_bill', 'package') NOT NULL,
    waiting_duration INT DEFAULT 0, -- untuk prime time waiting
    free_item VARCHAR(100) NULL, -- "small_popcorn", "large_popcorn"
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (table_id) REFERENCES tables(id),
    FOREIGN KEY (package_id) REFERENCES packages(id)
);

CREATE TABLE billing_sessions (
    id INT PRIMARY KEY AUTO_INCREMENT,
    booking_id INT NOT NULL,
    start_time DATETIME NOT NULL,
    last_pause_time DATETIME NULL,
    total_pause_duration INT DEFAULT 0, -- dalam menit
    current_charge DECIMAL(10,2) DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    is_paused BOOLEAN DEFAULT FALSE,
    
    FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE CASCADE
);

CREATE TABLE payments (
    id INT PRIMARY KEY AUTO_INCREMENT,
    booking_id INT NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    payment_method ENUM('cash', 'transfer', 'ewallet') NOT NULL,
    status ENUM('pending', 'paid', 'failed', 'refunded') DEFAULT 'pending',
    payment_proof VARCHAR(255) NULL, -- path gambar bukti transfer
    change_amount DECIMAL(10,2) DEFAULT 0, -- untuk tunai
    paid_at DATETIME NULL,
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (booking_id) REFERENCES bookings(id)
);

CREATE TABLE products (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    category ENUM('food', 'beverage', 'merchandise', 'snack') NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    stock INT NOT NULL,
    image VARCHAR(255) NULL,
    description TEXT,
    is_available BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE orders (
    id INT PRIMARY KEY AUTO_INCREMENT,
    booking_id INT NOT NULL,
    user_id INT NOT NULL,
    table_id INT NOT NULL,
    total_amount DECIMAL(10,2) NOT NULL,
    status ENUM('pending', 'preparing', 'ready', 'served', 'cancelled') DEFAULT 'pending',
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (booking_id) REFERENCES bookings(id),
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (table_id) REFERENCES tables(id)
);

CREATE TABLE order_items (
    id INT PRIMARY KEY AUTO_INCREMENT,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    unit_price DECIMAL(10,2) NOT NULL,
    total_price DECIMAL(10,2) NOT NULL,
    is_free_item BOOLEAN DEFAULT FALSE, -- untuk free popcorn
    
    FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id)
);

CREATE TABLE tournaments (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(200) NOT NULL,
    type ENUM('singles', 'doubles', 'team') NOT NULL,
    entry_fee DECIMAL(10,2) NOT NULL,
    prize_pool DECIMAL(10,2) NOT NULL,
    max_participants INT NOT NULL,
    registration_deadline DATETIME NOT NULL,
    start_date DATETIME NOT NULL,
    status ENUM('upcoming', 'ongoing', 'completed', 'cancelled') DEFAULT 'upcoming',
    rules TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE tournament_registrations (
    id INT PRIMARY KEY AUTO_INCREMENT,
    tournament_id INT NOT NULL,
    user_id INT NOT NULL,
    team_name VARCHAR(100) NULL,
    player_count INT DEFAULT 1,
    total_fee DECIMAL(10,2) NOT NULL,
    payment_status ENUM('pending', 'paid', 'failed') DEFAULT 'pending',
    bracket_position VARCHAR(50) NULL,
    status ENUM('registered', 'playing', 'eliminated', 'winner') DEFAULT 'registered',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    FOREIGN KEY (tournament_id) REFERENCES tournaments(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);